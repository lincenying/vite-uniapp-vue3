/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const $api: typeof import('@/api')['$api']
  const EffectScope: typeof import('vue')['EffectScope']
  const ObjectToArray: typeof import('./composables/index')['ObjectToArray']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const createReusableTemplate: typeof import('@lincy/vue-reuse-template')['createReusableTemplate']
  const customRef: typeof import('vue')['customRef']
  const dataReloadKey: typeof import('./composables/provide')['dataReloadKey']
  const deepClone: typeof import('@lincy/utils')['deepClone']
  const deepEqual: typeof import('@lincy/utils')['deepEqual']
  const deepMerge: typeof import('@lincy/utils')['deepMerge']
  const defaultHideBar: typeof import('./composables/index')['defaultHideBar']
  const defaultShowBar: typeof import('./composables/index')['defaultShowBar']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineStore: typeof import('pinia')['defineStore']
  const effectScope: typeof import('vue')['effectScope']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const getNavBarInfo: typeof import('./composables/system-rect-info')['getNavBarInfo']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isDark: typeof import('./composables/index')['isDark']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const layoutDataKey: typeof import('./composables/provide')['layoutDataKey']
  const ls: typeof import('./composables/index')['ls']
  const markRaw: typeof import('vue')['markRaw']
  const navBarInfo: typeof import('./composables/system-rect-info')['navBarInfo']
  const nextTick: typeof import('vue')['nextTick']
  const noDataKey: typeof import('./composables/provide')['noDataKey']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onHide: typeof import('@dcloudio/uni-app')['onHide']
  const onLaunch: typeof import('@dcloudio/uni-app')['onLaunch']
  const onLoad: typeof import('@dcloudio/uni-app')['onLoad']
  const onMounted: typeof import('vue')['onMounted']
  const onPullDownRefresh: typeof import('@dcloudio/uni-app')['onPullDownRefresh']
  const onReachBottom: typeof import('@dcloudio/uni-app')['onReachBottom']
  const onReady: typeof import('@dcloudio/uni-app')['onReady']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onShow: typeof import('@dcloudio/uni-app')['onShow']
  const onUnload: typeof import('@dcloudio/uni-app')['onUnload']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const router: typeof import('./composables/use-router')['router']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const showLoading: typeof import('./composables/index')['showLoading']
  const showToast: typeof import('./composables/index')['showToast']
  const storeToRefs: typeof import('pinia')['storeToRefs']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const toggleDark: typeof import('./composables/index')['toggleDark']
  const triggerRef: typeof import('vue')['triggerRef']
  const uniAsync: typeof import('./composables/index')['uniAsync']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useDetail: typeof import('./composables/get-detail')['useDetail']
  const useHead: typeof import('@unhead/vue')['useHead']
  const useList: typeof import('./composables/get-list')['useList']
  const useLists: typeof import('./composables/get-lists')['useLists']
  const useLockFn: typeof import('./composables/index')['useLockFn']
  const useScroll: typeof import('./composables/scroll')['useScroll']
  const useSlots: typeof import('vue')['useSlots']
  const useUniAppSystemRectInfo: typeof import('./composables/system-rect-info')['useUniAppSystemRectInfo']
  const useUserStore: typeof import('./pinia/useUserInfo')['useUserStore']
  const useWxShare: typeof import('./composables/wx-share')['useWxShare']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, VNode, WritableComputedRef } from 'vue'
  import('vue')
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface GlobalComponents {}
  interface ComponentCustomProperties {
    readonly $api: UnwrapRef<typeof import('@/api')['$api']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly ObjectToArray: UnwrapRef<typeof import('./composables/index')['ObjectToArray']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly createReusableTemplate: UnwrapRef<typeof import('@lincy/vue-reuse-template')['createReusableTemplate']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly dataReloadKey: UnwrapRef<typeof import('./composables/provide')['dataReloadKey']>
    readonly deepClone: UnwrapRef<typeof import('@lincy/utils')['deepClone']>
    readonly deepEqual: UnwrapRef<typeof import('@lincy/utils')['deepEqual']>
    readonly deepMerge: UnwrapRef<typeof import('@lincy/utils')['deepMerge']>
    readonly defaultHideBar: UnwrapRef<typeof import('./composables/index')['defaultHideBar']>
    readonly defaultShowBar: UnwrapRef<typeof import('./composables/index')['defaultShowBar']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly defineStore: UnwrapRef<typeof import('pinia')['defineStore']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly getNavBarInfo: UnwrapRef<typeof import('./composables/system-rect-info')['getNavBarInfo']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isDark: UnwrapRef<typeof import('./composables/index')['isDark']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly layoutDataKey: UnwrapRef<typeof import('./composables/provide')['layoutDataKey']>
    readonly ls: UnwrapRef<typeof import('./composables/index')['ls']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly navBarInfo: UnwrapRef<typeof import('./composables/system-rect-info')['navBarInfo']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly noDataKey: UnwrapRef<typeof import('./composables/provide')['noDataKey']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onHide: UnwrapRef<typeof import('@dcloudio/uni-app')['onHide']>
    readonly onLaunch: UnwrapRef<typeof import('@dcloudio/uni-app')['onLaunch']>
    readonly onLoad: UnwrapRef<typeof import('@dcloudio/uni-app')['onLoad']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onPullDownRefresh: UnwrapRef<typeof import('@dcloudio/uni-app')['onPullDownRefresh']>
    readonly onReachBottom: UnwrapRef<typeof import('@dcloudio/uni-app')['onReachBottom']>
    readonly onReady: UnwrapRef<typeof import('@dcloudio/uni-app')['onReady']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onShow: UnwrapRef<typeof import('@dcloudio/uni-app')['onShow']>
    readonly onUnload: UnwrapRef<typeof import('@dcloudio/uni-app')['onUnload']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly router: UnwrapRef<typeof import('./composables/use-router')['router']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly showLoading: UnwrapRef<typeof import('./composables/index')['showLoading']>
    readonly showToast: UnwrapRef<typeof import('./composables/index')['showToast']>
    readonly storeToRefs: UnwrapRef<typeof import('pinia')['storeToRefs']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly toggleDark: UnwrapRef<typeof import('./composables/index')['toggleDark']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly uniAsync: UnwrapRef<typeof import('./composables/index')['uniAsync']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useDetail: UnwrapRef<typeof import('./composables/get-detail')['useDetail']>
    readonly useHead: UnwrapRef<typeof import('@unhead/vue')['useHead']>
    readonly useList: UnwrapRef<typeof import('./composables/get-list')['useList']>
    readonly useLists: UnwrapRef<typeof import('./composables/get-lists')['useLists']>
    readonly useLockFn: UnwrapRef<typeof import('./composables/index')['useLockFn']>
    readonly useScroll: UnwrapRef<typeof import('./composables/scroll')['useScroll']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useUniAppSystemRectInfo: UnwrapRef<typeof import('./composables/system-rect-info')['useUniAppSystemRectInfo']>
    readonly useUserStore: UnwrapRef<typeof import('./pinia/useUserInfo')['useUserStore']>
    readonly useWxShare: UnwrapRef<typeof import('./composables/wx-share')['useWxShare']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
declare module '@vue/runtime-core' {
  interface GlobalComponents {}
  interface ComponentCustomProperties {
    readonly $api: UnwrapRef<typeof import('@/api')['$api']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly ObjectToArray: UnwrapRef<typeof import('./composables/index')['ObjectToArray']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly createReusableTemplate: UnwrapRef<typeof import('@lincy/vue-reuse-template')['createReusableTemplate']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly dataReloadKey: UnwrapRef<typeof import('./composables/provide')['dataReloadKey']>
    readonly deepClone: UnwrapRef<typeof import('@lincy/utils')['deepClone']>
    readonly deepEqual: UnwrapRef<typeof import('@lincy/utils')['deepEqual']>
    readonly deepMerge: UnwrapRef<typeof import('@lincy/utils')['deepMerge']>
    readonly defaultHideBar: UnwrapRef<typeof import('./composables/index')['defaultHideBar']>
    readonly defaultShowBar: UnwrapRef<typeof import('./composables/index')['defaultShowBar']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly defineStore: UnwrapRef<typeof import('pinia')['defineStore']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly getNavBarInfo: UnwrapRef<typeof import('./composables/system-rect-info')['getNavBarInfo']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isDark: UnwrapRef<typeof import('./composables/index')['isDark']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly layoutDataKey: UnwrapRef<typeof import('./composables/provide')['layoutDataKey']>
    readonly ls: UnwrapRef<typeof import('./composables/index')['ls']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly navBarInfo: UnwrapRef<typeof import('./composables/system-rect-info')['navBarInfo']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly noDataKey: UnwrapRef<typeof import('./composables/provide')['noDataKey']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onHide: UnwrapRef<typeof import('@dcloudio/uni-app')['onHide']>
    readonly onLaunch: UnwrapRef<typeof import('@dcloudio/uni-app')['onLaunch']>
    readonly onLoad: UnwrapRef<typeof import('@dcloudio/uni-app')['onLoad']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onPullDownRefresh: UnwrapRef<typeof import('@dcloudio/uni-app')['onPullDownRefresh']>
    readonly onReachBottom: UnwrapRef<typeof import('@dcloudio/uni-app')['onReachBottom']>
    readonly onReady: UnwrapRef<typeof import('@dcloudio/uni-app')['onReady']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onShow: UnwrapRef<typeof import('@dcloudio/uni-app')['onShow']>
    readonly onUnload: UnwrapRef<typeof import('@dcloudio/uni-app')['onUnload']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly router: UnwrapRef<typeof import('./composables/use-router')['router']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly showLoading: UnwrapRef<typeof import('./composables/index')['showLoading']>
    readonly showToast: UnwrapRef<typeof import('./composables/index')['showToast']>
    readonly storeToRefs: UnwrapRef<typeof import('pinia')['storeToRefs']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly toggleDark: UnwrapRef<typeof import('./composables/index')['toggleDark']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly uniAsync: UnwrapRef<typeof import('./composables/index')['uniAsync']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useDetail: UnwrapRef<typeof import('./composables/get-detail')['useDetail']>
    readonly useHead: UnwrapRef<typeof import('@unhead/vue')['useHead']>
    readonly useList: UnwrapRef<typeof import('./composables/get-list')['useList']>
    readonly useLists: UnwrapRef<typeof import('./composables/get-lists')['useLists']>
    readonly useLockFn: UnwrapRef<typeof import('./composables/index')['useLockFn']>
    readonly useScroll: UnwrapRef<typeof import('./composables/scroll')['useScroll']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useUniAppSystemRectInfo: UnwrapRef<typeof import('./composables/system-rect-info')['useUniAppSystemRectInfo']>
    readonly useUserStore: UnwrapRef<typeof import('./pinia/useUserInfo')['useUserStore']>
    readonly useWxShare: UnwrapRef<typeof import('./composables/wx-share')['useWxShare']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
